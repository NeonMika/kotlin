FILE: sealedArguments.kt
    public sealed interface Argument : R|kotlin/Any| {
    }
    public final data class Number : R|Argument| {
        public constructor(n: R|kotlin/Int|): R|Number| {
            super<R|kotlin/Any|>()
        }

        public final val n: R|kotlin/Int| = R|<local>/n|
            public get(): R|kotlin/Int|

        public final operator fun component1(): R|kotlin/Int|

        public final fun copy(n: R|kotlin/Int| = this@R|/Number|.R|/Number.n|): R|Number|

    }
    public final data class String : R|Argument| {
        public constructor(s: R|kotlin/String|): R|String| {
            super<R|kotlin/Any|>()
        }

        public final val s: R|kotlin/String| = R|<local>/s|
            public get(): R|kotlin/String|

        public final operator fun component1(): R|kotlin/String|

        public final fun copy(s: R|kotlin/String| = this@R|/String|.R|/String.s|): R|String|

    }
    public final fun foo(arg: R|Argument|): R|kotlin/Unit| {
    }
    public final fun main(): R|kotlin/Unit| {
        R|/foo|(Int(1))
        R|/foo|(String(Hello))
        R|/foo<Inapplicable(INAPPLICABLE): /foo>#|(Boolean(true))
    }
